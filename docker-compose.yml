services:

  # Backend service
  Django:
    image: django
    container_name: django
    build: ./backend/services/Django
    depends_on:
      - PostgreSQL
    volumes:
      - ./backend/services/Django:/app
    ports:
      - "8000:8000"
    restart: always
    networks:
      - Ft_Transcendence
    secrets:
      - postgres_password
      - django_superuser
    environment:
      - POSTGRES_DB=ft_transcendence_db
      - POSTGRES_USER=ft_transcendence_user
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_HOST=postgres

  PostgreSQL:
    image: postgres:17.2
    # build:
    #   context: ./backend/services/postgres
    container_name: postgres
    restart: always
    networks:
      - Ft_Transcendence
    command: ["postgres", "-c", "hba_file=/etc/postgresql/pg_hba.conf"]
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./backend/services/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    secrets:
      - postgres_password
    environment:
      - POSTGRES_DB=ft_transcendence_db
      - POSTGRES_USER=ft_transcendence_user
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password

  nginx:
    image: nginx
    container_name: nginx
    build: ./backend/services/nginx
    depends_on:
      - Django
    ports:
      - "443:443" #random ports
    restart: always
    networks:
      - Ft_Transcendence
    volumes:
      - ./frontend:/var/www/transcendence

volumes:
  postgres_volume:
    name: postgres_volume
    driver: local
  nginx_volume:
    name: nginx_volume
    driver: local

networks:
  Ft_Transcendence:
    name: inception
    driver: bridge

secrets:
  postgres_password:
    file: ./secrets/postgres_password.env
  django_superuser:

    file: ./secrets/django_superuser.env
