services:

  # Blockchain service
  Blockchain:
    image: node:20-alpine
    container_name: blockchain
    build: ./blockchain
    volumes:
      - ./blockchain:/solidity
      - ./web3_share:/web3_share
    restart: always
    networks:
      - Ft_Transcendence
    healthcheck:
      test: ["CMD-SHELL", "if [ -f /web3_share/MatchScore.json ]; then exit 0; else exit 1; fi"]
      interval: 5s
      timeout: 2s
      retries: 5

  # Backend service
  Django:
    image: django
    container_name: django
    build: ./backend/services/Django
    depends_on:
      PostgreSQL:
        condition: service_healthy
      redis:
        condition: service_started
      Blockchain:
        condition: service_healthy
    volumes:
      - ./backend/services/Django:/app
      - ./web3_share:/web3_share
    restart: always
    networks:
      - Ft_Transcendence
    secrets:
      - postgres_password
      - django_superuser
      - django_secret_key
    environment:
      - POSTGRES_HOST=postgres
    env_file:
      - .env

  # Database service
  PostgreSQL:
    image: postgres:17.2
    container_name: postgres
    restart: always
    networks:
      - Ft_Transcendence
    command: ["postgres", "-c", "hba_file=/etc/postgresql/pg_hba.conf"]
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./backend/services/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    secrets:
      - postgres_password
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 2s
      retries: 5

  nginx:
    image: nginx
    container_name: nginx
    build: ./backend/services/nginx
    depends_on:
      - Django
    ports:
      - "443:443"
    restart: always
    networks:
      - Ft_Transcendence
    volumes:
      - ./frontend:/var/www/transcendence
      - ./backend/services/nginx/certs:/etc/nginx/certs
      - ./backend/services/Django/media:/var/www/transcendence/media
      - ./backend/services/Django/static_files:/var/www/transcendence/static
    environment:
      - DOMAIN=transcendence.de

  redis:
    image: redis:7.4.2
    container_name: redis
    restart: always
    networks:
      - Ft_Transcendence

volumes:
  postgres_volume:
    name: postgres_volume
    driver: local

networks:
  Ft_Transcendence:
    name: transcendence
    driver: bridge

secrets:
  postgres_password:
    file: ./secrets/postgres_password.env
  django_superuser:
    file: ./secrets/django_superuser.env
  django_secret_key:
    file: ./secrets/django_secret_key
